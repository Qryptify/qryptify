name: Optimize Smoke

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  optimize:
    name: Run optimizer smoke test
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg[binary]" pyyaml loguru
          pip install -e .

      - name: Start TimescaleDB
        run: |
          docker compose up -d db
          echo "Waiting for qryptify_db to be healthy..."
          ATTEMPTS=0; MAX=60; SLEEP=5
          STATUS=$(docker inspect -f '{{.State.Health.Status}}' qryptify_db 2>/dev/null || echo 'missing')
          until [ "$STATUS" = "healthy" ] || [ $ATTEMPTS -ge $MAX ]; do
            ATTEMPTS=$((ATTEMPTS+1))
            echo "  - status: $STATUS (attempt $ATTEMPTS/$MAX)"
            sleep $SLEEP
            STATUS=$(docker inspect -f '{{.State.Health.Status}}' qryptify_db 2>/dev/null || echo 'missing')
          done
          if [ "$STATUS" != "healthy" ]; then
            echo "DB failed to become healthy" >&2
            docker logs --tail=200 qryptify_db || true
            exit 1
          fi

      - name: Seed OHLCV data
        env:
          PGPASSWORD: postgres
        run: |
          python scripts/seed_ohlcv.py --pair BTCUSDT/1h --rows 500

      - name: Run optimizer (ema, small grid)
        run: |
          python -m qryptify_strategy.optimize \
            --pair BTCUSDT/1h \
            --lookback 300 \
            --strategies ema \
            --fast 10 \
            --slow 50 \
            --risk 0.005 \
            --atr-mult 2.0 \
            --out reports/optimizer_results_ci.csv \
            --pareto-dir "" \
            --md-out reports/optimizer_summary_ci.md
          test -f reports/optimizer_results_ci.csv
          echo "--- Optimizer results (head) ---"
          head -n 5 reports/optimizer_results_ci.csv || true

      - name: Run backtests (each strategy once, 1 timeframe)
        run: |
          echo "Running EMA backtest..."
          python -m qryptify_strategy.backtest \
            --pair BTCUSDT/1h \
            --strategy ema \
            --lookback 300 \
            --fast 10 --slow 50 \
            --equity 10000 --risk 0.005 \
            --atr 14 --atr-mult 2.0 \
            --slip-bps 0 --fee-bps 4.0

          echo "Running Bollinger backtest..."
          python -m qryptify_strategy.backtest \
            --pair BTCUSDT/1h \
            --strategy bollinger \
            --lookback 300 \
            --bb-period 20 --bb-mult 2.0 \
            --equity 10000 --risk 0.005 \
            --atr 14 --atr-mult 2.0 \
            --slip-bps 0 --fee-bps 4.0

          echo "Running RSI backtest..."
          python -m qryptify_strategy.backtest \
            --pair BTCUSDT/1h \
            --strategy rsi \
            --lookback 300 \
            --rsi-period 14 --rsi-entry 30 --rsi-exit 55 --rsi-ema 50 \
            --equity 10000 --risk 0.005 \
            --atr 14 --atr-mult 2.0 \
            --slip-bps 0 --fee-bps 4.0

      - name: Teardown
        if: always()
        run: |
          docker compose down -v || true
